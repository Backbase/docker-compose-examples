version: "3.7"
# https://docs.docker.com/compose/compose-file/

x-common-variables: &common-variables
  SIG_SECRET_KEY: JWTSecretKeyDontUseInProduction!
  EXTERNAL_SIG_SECRET_KEY: JWTSecretKeyDontUseInProduction!
  EXTERNAL_ENC_SECRET_KEY: JWTEncKeyDontUseInProduction666!
  eureka.client.serviceUrl.defaultZone: http://registry:8080/eureka
  eureka.instance.non-secure-port: 8080
  management.endpoints.web.exposure.include: info,health,beans,bindings
  SPRING_MAIN_BANNER-MODE: 'off'

x-database-variables: &database-variables
  spring.liquibase.enabled: 'true'
  spring.datasource.username: root
  spring.datasource.password: root
  spring.datasource.driver-class-name: com.mysql.jdbc.Driver
  spring.jpa.database-platform: org.hibernate.dialect.MySQL5Dialect
  spring.jpa.properties.hibernate.dialect: org.hibernate.dialect.MySQL5Dialect

x-message-broker-variables: &message-broker-variables
  spring.activemq.broker-url: tcp://message-broker:61616
  spring.activemq.user: admin
  spring.activemq.password: admin

services:

  message-broker:
    image: rmohr/activemq:5.15.9-alpine
    container_name: demo_activemq
    privileged: true
    ports:
      - "61616:61616"
      - "8161:8161"
      - "5672:5672"
      - "61613:61613"
      - "1883:1883"
      - "61614:61614"

  mysql:
    image: mysql:5.7.18
    # Set max_allowed_packet to 512M for provisioning
    command: --max-allowed-packet=512M --performance-schema=FALSE --transaction-isolation=READ-COMMITTED --init-connect='SET collation_connection=utf8_bin' --init-connect='SET NAMES utf8;' --character-set-server=utf8 --collation-server=utf8_bin --lower-case-table-names=2 --max-connections=500
    container_name: demo_mysql
    environment:
      - MYSQL_ROOT_PASSWORD=root
    ports:
      - "3306:3306"
    volumes:
      - demo_mysql_data:/var/lib/mysql

  edge:
    image: repo.backbase.com/backbase-docker-releases/gateway:IPS-1.11.8-latest
    ports:
      - "8080:8080"
    environment:
      <<: *common-variables
      gateway.token.converter.url: http://token-converter/convert
    links:
      - registry
      - token-converter
  
  registry:
    image: repo.backbase.com/backbase-docker-releases/registry:IPS-1.11.8-latest
    ports:
      - "8761:8080"

  token-converter:
    image: repo.backbase.com/backbase-docker-releases/oidc-token-converter-service:IDENTITY-1.6.0.1-latest 
    ports:
      - "7779:8080"
    environment:
      <<: *common-variables
    links:
      - registry

  identity:
    image: repo.backbase.com/backbase-docker-releases/backbase-identity:IDENTITY-1.6.0.1-latest 
    ports:
      - "9090:8080"
    environment:
      QUARKUS_DATASOURCE_URL: jdbc:mysql://mysql:3306/identity?cacheServerConfiguration=true&createDatabaseIfNotExist=true
      QUARKUS_DATASOURCE_DRIVER: com.mysql.jdbc.Driver
      QUARKUS_DATASOURCE_USERNAME: root
      QUARKUS_DATASOURCE_PASSWORD: root
      QUARKUS_LOG_LEVEL: "INFO"
      QUARKUS_LOG_FILE_ENABLE: "false"
      QUARKUS_HTTP_PROXYADDRESSFORWARDING: "true"
      QUARKUS_HTTP_PROXY_ADDRESS_FORWARDING: "true"
      KEYCLOAK_CONNECTIONSJPA_QUARKUS_INITIALIZEEMPTY: "true"
      KEYCLOAK_CONNECTIONSJPA_QUARKUS_MIGRATIONSTRATEGY: "update"
      KEYCLOAK_ADMIN: "admin"
      KEYCLOAK_ADMIN_PASSWORD: "admin"
      KEYCLOAK_PASSWORD: "admin"
      KEYCLOAK_USER: "admin"
      # AUDIT_INTEGRATION_URI: "http://dbs-auditintegrationservice:8080/audit-integration-service"
      # KEYCLOAK_BACKBASE_DEVICE_URL: "http://identity-devicemanagementservice:8080"
      # KEYCLOAK_BACKBASE_FIDO_URL: "http://identity-fidoservice:8080"
      # KEYCLOAK_BACKBASE_EVENT_LISTENERS_AUDIT_INTEGRATIONSERVICEURL: "http://dbs-audit-auditintegrationservice:8080/"
      KEYCLOAK_BACKBASE_OIDC_TOKEN_CONVERTER_URL: "http://token-converter:8080"
      JAVA_TOOL_OPTIONS: "-Dkeycloak.migration.action=import -Dkeycloak.profile.feature.upload_scripts=enabled"
    links:
      - mysql
      - token-converter
    volumes:
      - ./json:/tmp/keycloak-export

  contentservices:
    image: repo.backbase.com/backbase-docker-releases/contentservices:CXS-6.2.3.1-latest
    hostname: contentservices
    ports:
      - "8040:8080"
    environment:
      <<: *common-variables
      <<: *message-broker-variables
      <<: *database-variables
      spring.datasource.url: jdbc:mysql://mysql:3306/cs?cacheServerConfiguration=true&createDatabaseIfNotExist=true
    links:
      - mysql
      - registry
      - message-broker

  portal:
    image: repo.backbase.com/backbase-docker-releases/portal:CXS-6.2.3.1-latest
    hostname: portal
    ports:
      - "8070:8080"
    environment:
      <<: *common-variables
      <<: *message-broker-variables
      <<: *database-variables
      portal.resource-location.profile: filesystem
      portal.resource-location.path: /tmp
      spring.datasource.url: jdbc:mysql://mysql:3306/portal?cacheServerConfiguration=true&createDatabaseIfNotExist=true
      spring.jpa.properties.hibernate.session_factory_name_is_jndi: 'false'
    links:
      - mysql
      - registry
      - contentservices
      - message-broker

  provisioning:
    image: repo.backbase.com/backbase-docker-releases/provisioning:CXS-6.2.3.1-latest
    hostname: provisioning
    ports:
      - "8090:8080"
    environment:
      <<: *common-variables
      <<: *message-broker-variables
      <<: *database-variables
      spring.datasource.url: jdbc:mysql://mysql:3306/provisioning?cacheServerConfiguration=true&createDatabaseIfNotExist=true
    links:
      - mysql
      - registry
      - message-broker

  # statics:
  #   image: torrespro/import-statics-demo-sh:latest
  #   links:
  #     - edge
  #     - portal
  #     - contentservices
  #     - provisioning
  #   environment:
  #     REPO_USERNAME: yourUsername
  #     REPO_PASSWORD: yourPassword
  #     CX6_VERSION: '6.2.2' 
  #     CX_MANAGER_VERSION: b3554
  #     IDENTITY: 'YES'
  #   command: sh -c "dockerize -wait http://edge:8080/api/provisioning/actuator/health/liveness -timeout 300s -wait-retry-interval 30s /import-statics"

volumes:
  demo_mysql_data: