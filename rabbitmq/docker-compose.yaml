version: "3.7"
# https://docs.docker.com/compose/compose-file/

x-common-variables: &common-variables
  SIG_SECRET_KEY: JWTSecretKeyDontUseInProduction!
  EXTERNAL_SIG_SECRET_KEY: JWTSecretKeyDontUseInProduction!
  EXTERNAL_ENC_SECRET_KEY: JWTEncKeyDontUseInProduction666!
  eureka.client.serviceUrl.defaultZone: http://registry:8080/eureka
  eureka.instance.non-secure-port: 8080
  management.endpoints.web.exposure.include: info,health,beans,bindings,gateway
  SPRING_MAIN_BANNER-MODE: 'off'

x-database-variables: &database-variables
  spring.liquibase.enabled: 'true'
  spring.datasource.username: root
  spring.datasource.password: root
  spring.datasource.driver-class-name: com.mysql.jdbc.Driver
  spring.jpa.database-platform: org.hibernate.dialect.MySQL5Dialect
  spring.jpa.properties.hibernate.dialect: org.hibernate.dialect.MySQL5Dialect

x-message-broker-variables: &message-broker-variables
  spring.cloud.stream.default-binder: rabbit
  # spring.cloud.stream.rabbit.default.headerPatterns: amqp_receivedDeliveryMode,bbTenantId,amqp_receivedExchange,amqp_deliveryTag,auth,amqp_redelivered,packageType,spanId,id
  spring.rabbitmq.host: message-broker
  spring.rabbitmq.port: 5672
  spring.rabbitmq.username: admin
  spring.rabbitmq.password: admin
  spring.autoconfigure.exclude: org.springframework.boot.autoconfigure.jms.JmsAutoConfiguration
  management.health.jms.enabled: 'false'
  # Disable JMS integration
  backbase.activemq.enabled: 'false'

services:

  message-broker:
    image: rabbitmq:3-management
    hostname: message-broker
    ports:
      - "5672:5672"
      - "15672:15672" # Admin UI (http://localhost:15672  .. admin:admin)
    environment:
      RABBITMQ_DEFAULT_USER: admin
      RABBITMQ_DEFAULT_PASS: admin

  mysql:
    image: mysql:5.7.18
    # Set max_allowed_packet to 512M for provisioning
    command: --max-allowed-packet=512M --performance-schema=FALSE --transaction-isolation=READ-COMMITTED --init-connect='SET collation_connection=utf8_bin' --init-connect='SET NAMES utf8;' --character-set-server=utf8 --collation-server=utf8_bin --lower-case-table-names=2 --max-connections=500
    container_name: demo_mysql
    environment:
      - MYSQL_ROOT_PASSWORD=root
    ports:
      - "3306:3306"
    volumes:
      - demo_mysql_data:/var/lib/mysql

  edge:
    image: repo.backbase.com/backbase-docker-releases/edge:IPS-1.12.0
    hostname: edge
    ports:
      - "8080:8080"
    environment:
      <<: *common-variables
      gateway.actuator.user: admin
      gateway.actuator.password: admin
    links:
      - registry
      - token-converter
  
  registry:
    image: repo.backbase.com/backbase-docker-releases/registry:IPS-1.12.0
    ports:
      - "8761:8080"

  token-converter:
    image: repo.backbase.com/backbase-docker-releases/bb-authentication-token-converter-service:IPS-1.12.0
    ports:
      - "7779:8080"
    environment:
      <<: *common-variables
    links:
      - registry

  auth:
    image: repo.backbase.com/backbase-docker-releases/authentication-dev:IPS-1.12.0-no-production
    ports:
      - "7778:8080"
    environment:
      <<: *common-variables
      spring.autoconfigure.exclude: org.springframework.boot.autoconfigure.jms.JmsAutoConfiguration
      management.health.jms.enabled: 'false'
        # Disable JMS integration
      backbase.activemq.enabled: 'false'
    links:
      - registry
      - message-broker

  contentservices:
    image: repo.backbase.com/backbase-docker-releases/contentservices:CXS-6.2.5
    hostname: contentservices
    ports:
      - "8040:8080"
    environment:
      <<: *common-variables
      <<: *message-broker-variables
      <<: *database-variables
      spring.datasource.url: jdbc:mysql://mysql:3306/cs?cacheServerConfiguration=true&createDatabaseIfNotExist=true
    links:
      - mysql
      - registry
      - message-broker

  portal:
    image: repo.backbase.com/backbase-docker-releases/portal:CXS-6.2.5
    hostname: portal
    ports:
      - "8070:8080"
    environment:
      <<: *common-variables
      <<: *message-broker-variables
      <<: *database-variables
      portal.resource-location.profile: filesystem
      portal.resource-location.path: /tmp
      spring.datasource.url: jdbc:mysql://mysql:3306/portal?cacheServerConfiguration=true&createDatabaseIfNotExist=true
      spring.jpa.properties.hibernate.session_factory_name_is_jndi: 'false'
    links:
      - mysql
      - registry
      - contentservices
      - message-broker

  provisioning:
    image: repo.backbase.com/backbase-docker-releases/provisioning:CXS-6.2.5
    hostname: provisioning
    ports:
      - "8090:8080"
    environment:
      <<: *common-variables
      <<: *message-broker-variables
      <<: *database-variables
      spring.datasource.url: jdbc:mysql://mysql:3306/provisioning?cacheServerConfiguration=true&createDatabaseIfNotExist=true
    links:
      - mysql
      - registry
      - message-broker

  statics:
    image: torrespro/import-statics:latest
    volumes:
      - ./../job.yaml:/import/job.yaml
    links:
      - edge
      - portal
      - contentservices
      - provisioning
    command: sh -c "dockerize -wait http://edge:8080/api/provisioning/actuator/health/liveness -timeout 300s -wait-retry-interval 30s ./import-statics.py"

volumes:
  demo_mysql_data: